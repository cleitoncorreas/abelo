#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../config/environment'


############Country, State, City########################
BSC::Country.destroy_all
country = BSC::Country.create!(:name => 'Brazil')
state = BSC::State.create!(:name => 'Bahia', :country => country)
city = BSC::City.create!(:name => 'Salvador', :state => state)


############Virtual Community########################
Environment.destroy_all
Environment.create!(:name => 'Default Environment', :is_default => true)


############Organizations########################
Organization.destroy_all
organization = Organization.new
organization.name = 'Toca'
organization.cnpj = '05359933000193'
organization.identifier = 'toca'
organization.state_registration = 12345
organization.trade_name = 'Loja Toca LTDA'
organization.responsible_person = 'Jose Silva'
organization.country = country.id
organization.state = state.id
organization.city = city.id
organization.save!

############Configuration#########################
configuration = organization.configuration

Configuration::DISPLAY_CONFIGURATION_CLASSES.each do |item|
  str = item.gsub('Display', '').underscore
  configuration.send("#{str}_module=", true)
end


ProductDisplay.delete_all
params = {}
ProductDisplay.available_fields.collect { |d|
  in_list = ['image', 'name','size', 'category' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_product_displays=(params)

WorkerDisplay.delete_all
params = {}
WorkerDisplay.available_fields.collect { |d|
  in_list = ['name', 'description', 'email' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_worker_displays=(params)

CustomerDisplay.delete_all
params = {}
CustomerDisplay.available_fields.collect { |d|
  in_list = ['name', 'description', 'email' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_customer_displays=(params)

SupplierDisplay.delete_all
params = {}
SupplierDisplay.available_fields.collect { |d|
  in_list = ['name', 'description', 'email' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_supplier_displays=(params)

ProductCategoryDisplay.delete_all
params = {}
ProductCategoryDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_product_category_displays=(params)

CustomerCategoryDisplay.delete_all
params = {}
CustomerCategoryDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_customer_category_displays=(params)

WorkerCategoryDisplay.delete_all
params = {}
WorkerCategoryDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_worker_category_displays=(params)

SupplierCategoryDisplay.delete_all
params = {}
SupplierCategoryDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_supplier_category_displays=(params)

LedgerCategoryDisplay.delete_all
params = {}
LedgerCategoryDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_ledger_category_displays=(params)

MoneyDisplay.delete_all
params = {}
MoneyDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_money_displays=(params)

CheckDisplay.delete_all
params = {}
CheckDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_check_displays=(params)

CreditCardDisplay.delete_all
params = {}
CreditCardDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_credit_card_displays=(params)

DebitCardDisplay.delete_all
params = {}
DebitCardDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_debit_card_displays=(params)

BankAccountDisplay.delete_all
params = {}
BankAccountDisplay.available_fields.collect { |d|
  in_list = ['bank', 'agency', 'variation', 'account', 'owner' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_bank_account_displays=(params)

DepartmentDisplay.delete_all
params = {}
DepartmentDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_department_displays=(params)

StockInDisplay.delete_all
params = {}
StockInDisplay.available_fields.collect { |d|
  in_list = ['date', 'amount', 'price', 'supplier', 'type_of' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_stock_in_displays=(params)

InvoiceDisplay.delete_all
params = {}
InvoiceDisplay.available_fields.collect { |d|
  in_list = ['number', 'serie', 'supplier_id', 'issue_date', 'status'].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_invoice_displays=(params)

StockDevolutionDisplay.delete_all
params = {}
StockDevolutionDisplay.available_fields.collect { |d|
  in_list = ['date', 'amount', 'product'].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_stock_devolution_displays=(params)

StockDownDisplay.delete_all
params = {}
StockDownDisplay.available_fields.collect { |d|
  in_list = ['date', 'amount', 'product'].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_stock_down_displays=(params)

StockOutDisplay.delete_all
params = {}
StockOutDisplay.available_fields.collect { |d|
  in_list = ['date', 'amount', 'price', 'supplier', 'type_of' ].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_stock_out_displays=(params)

UserDisplay.delete_all
params = {}
UserDisplay.available_fields.collect { |d|
  in_list = ['login', 'template_description'].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_user_displays=(params)

PeriodicityDisplay.delete_all
params = {}
PeriodicityDisplay.available_fields.collect { |d|
  in_list = ['name', 'number_of_days'].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_periodicity_displays=(params)

StockVirtualDisplay.delete_all
params = {}
StockVirtualDisplay.available_fields.collect { |d|
  in_list = true
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_stock_virtual_displays=(params)

MassMailDisplay.delete_all
params = {}
MassMailDisplay.available_fields.collect { |d|
  in_list = ['subject', 'body'].include?(d) ? true : false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_mass_mail_displays=(params)

DocumentDisplay.delete_all
params = {}
DocumentDisplay.available_fields.collect { |d|
  in_list = ['name', 'departments', 'owner', 'owner_class'].include?(d) ? true :false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_document_displays=(params)

AddressDisplay.delete_all
params = {}
AddressDisplay.available_fields.collect { |d|
  in_list = ['country', 'state', 'city'].include?(d) ? true :false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}

PrinterDisplay.delete_all
params = {}
PrinterDisplay.available_fields.collect { |d|
  in_list = ['name', 'serial', 'computer_id'].include?(d) ? true :false
  params[d] = {:field => d, :display_in_list => in_list, :display_title => true }  
}
configuration.set_printer_displays=(params)

configuration.save!

###########Categories###################################
Category.destroy_all

vestuario = ProductCategory.new(:name => 'vestuário')  
vestuario.organization = organization
vestuario.save!
acessorio = ProductCategory.new(:name => 'acessório')
acessorio.organization = organization
acessorio.save!

fornecedor_vestuario = SupplierCategory.new(:name => 'fornecedor de vestuário')  
fornecedor_vestuario.organization = organization
fornecedor_vestuario.save
fornecedor_acessorio = SupplierCategory.new(:name => 'fornecedor de acessórios')  
fornecedor_acessorio.organization = organization
fornecedor_acessorio.save

consumidor_pessoa = CustomerCategory.new
consumidor_pessoa.name = 'consumidor pessoa física'
consumidor_pessoa.organization = organization
consumidor_pessoa.save
consumidor_empresa = CustomerCategory.new
consumidor_empresa.name = 'consumidor empresa'
consumidor_empresa.organization = organization
consumidor_empresa.save

salesman_category = WorkerCategory.new
salesman_category.name = 'salesman_category'
salesman_category.organization = organization
salesman_category.save
manager_category = WorkerCategory.new
manager_category.name = 'manager_category'
manager_category.organization = organization
manager_category.save

################### Unit ######################
UnitMeasure.destroy_all
unit_un = UnitMeasure.create!(:name => 'Unidade', :abbreviation => 'Un', :organization => organization)
UnitMeasure.create!(:name => 'Quilograma', :abbreviation => 'Kg', :organization => organization)
UnitMeasure.create!(:name => 'Grama', :abbreviation => 'g', :organization => organization)
UnitMeasure.create!(:name => 'Litro', :abbreviation => 'Lt', :organization => organization)

############Products#############################
Product.destroy_all
camisa = Product.new(:name => 'camisa basica', :size => 'p', :color => 'azul', :sell_price => 25.00, :unit_measure => unit_un, :code => 1)
camisa.organization = organization
camisa.category = vestuario
camisa.save!
calca = Product.new(:name => 'calca xadrez', :size => 'p', :color => 'verde', :sell_price => 45.00, :unit_measure => unit_un, :code => 2)
calca.organization = organization
calca.category = vestuario
calca.save!
colar = Product.new(:name => 'colar golfinho', :size => '20', :color => 'preto', :sell_price => 20.00, :unit_measure => unit_un, :code => 3)
colar.organization = organization
colar.category = acessorio
colar.save!
brinco = Product.new(:name => 'brinco madreperola', :size => '4', :color => 'branco', :sell_price => 15.00, :unit_measure => unit_un, :code => 4)
brinco.organization = organization
brinco.category = acessorio
brinco.save!
monitor = Product.new(:name => 'monitor lcd', :size => '15', :color => 'preto', :sell_price => 6.00, :unit_measure => unit_un, :code => 5)
monitor.organization = organization
monitor.category = acessorio
monitor.save!

############Images###############################
Image.destroy_all

IMAGE_PATH_DIR = "#{RAILS_ROOT}/script/test_images"

camisa_img = Image.new
camisa_img.description = 'camisa básica azul'
stream = StringIO.new(File.read("#{IMAGE_PATH_DIR}/camisa_basica_azul.jpg"))
def stream.original_filename
  'camisa_basica_azul.jpg'
end
def stream.content_type
  'image/jpg'
end
camisa_img.picture = stream
camisa_img.product = camisa
camisa_img.save!

calca_img = Image.new
calca_img.description = 'calça xadrez'
stream = StringIO.new(File.read("#{IMAGE_PATH_DIR}/calca_xadrez.jpg"))
def stream.original_filename
  'calca_xadrez.jpg'
end
def stream.content_type
  'image/jpg'
end
calca_img.picture = stream
calca_img.product = calca
calca_img.save!

brinco_img = Image.new
brinco_img.description = 'brinco madrepérola'
stream = StringIO.new(File.read("#{IMAGE_PATH_DIR}/brinco_madreperola.jpg"))
def stream.original_filename
  'brinco_madreperola.jpg'
end
def stream.content_type
  'image/jpg'
end
brinco_img.picture = stream
brinco_img.product = brinco
brinco_img.save!

colar_img = Image.new
colar_img.description = 'colar golfinho'
stream = StringIO.new(File.read("#{IMAGE_PATH_DIR}/colar_golfinho.jpg"))
def stream.original_filename
  'colar_golfinho.jpg'
end
def stream.content_type
  'image/jpg'
end
colar_img.picture = stream
colar_img.product = colar
colar_img.save!

monitor_img = Image.new
monitor_img.description = 'monitor lcd'
stream = StringIO.new(File.read("#{IMAGE_PATH_DIR}/monitor_lcd.jpg"))
def stream.original_filename
  'monitor_lcd.jpg'
end
def stream.content_type
  'image/jpg'
end
monitor_img.picture = stream
monitor_img.product = monitor
monitor_img.save!

############Suppliers#############################
Supplier.destroy_all
hering = Supplier.create!(:name => 'Hering', :cnpj => '58178734000145', :organization => organization, :address => 'R Hermann Hering 1790 CEP: 89010900 Cidade: Blumenau UF: SC', :description => 'fornecedor de roupas', :email => 'contato@hering.com', :category => fornecedor_vestuario)
mundo_prata = Supplier.create!(:name => 'Mundo das Pratas', :cpf => '39377825679', :organization => organization, :address => 'Rua: Fonte do Boi, 215 - Rio Vermelho', :birthday => '1980-05-12', :description => 'fornecedor de pratas', :email => 'contato@mundo_das_pratas.com', :category => fornecedor_acessorio)

############Product Suppliers#####################
camisa.add_suppliers(hering)
calca.add_suppliers(hering)
colar.add_suppliers(mundo_prata)
brinco.add_suppliers(mundo_prata)


############People################################
Person.destroy_all
gerente = User.create!("administrator"=>false, "login"=>"quentin", "email"=>"quentin@example.com", :password => 'test', :password_confirmation => 'test')
financial = User.create!("password"=>"test", "password_confirmation" => 'test', "administrator"=>false, "login"=>"financeiro", "email"=>"financeiro@example.com")
test_user = User.create!("administrator"=>false, "login"=>"test", "email"=>"test@example.com", :password => 'test', :password_confirmation => 'test')
admin = User.create!("administrator"=>true, "login"=>"admin", "email"=>"admin@example.com", :password => 'admin', :password_confirmation => 'admin' )
sales_person = User.create!("administrator"=>false, "login"=>"vendedor", "email"=>"vendedor@example.com", :password => 'test', :password_confirmation => 'test')
sales_supervisor = User.create!("administrator"=>false, "login"=>"supervisor", "email"=>"supervisor@example.com", :password => 'test', :password_confirmation => 'test')

############User Profile##########################
Profile.destroy_all
perfil_organization = Profile.new
perfil_organization.name = 'Gerente da Organização'
perfil_organization.organization = organization
perfil_organization.user = gerente
perfil_organization.template = 'organization_management'
perfil_organization.save!

perfil_financial = Profile.new
perfil_financial.name = 'Financeiro'
perfil_financial.organization = organization
perfil_financial.user = financial
perfil_financial.template = 'financial'
perfil_financial.save!

perfil_admin = Profile.new
perfil_admin.user = admin
perfil_admin.template = 'administration'
perfil_admin.save!

perfil_vendedor = Profile.new
perfil_vendedor.name = 'Vendedor'
perfil_vendedor.organization = organization
perfil_vendedor.user = sales_person
perfil_vendedor.template = 'sales_person'
perfil_vendedor.save!

perfil_sales_supervisor = Profile.new
perfil_sales_supervisor.name = 'Supervisor'
perfil_sales_supervisor.organization = organization
perfil_sales_supervisor.user = sales_supervisor
perfil_sales_supervisor.template = 'sales_supervisor'
perfil_sales_supervisor.save!

############Customers#############################
Customer.destroy_all
cliente_one = Customer.create!(:name => 'João da Silva', :email => 'joao@colibre.coop.br', :birthday => '1984-08-15', :address => 'Rua Pará, nº 221, Pituba', :cpf => '74676743920', :organization => organization, :category => consumidor_empresa)
cliente_two = Customer.create!(:name => 'Alice Soares', :email => 'livia@localhost', :birthday => '1970-10-22', :address => 'Rua João das Botas, nº 15, Canela', :cpf => '93791122894', :organization => organization, :category => consumidor_pessoa)
cliente_three = Customer.create!(:name => 'Lívia Barreiros', :email => 'livinhaba@gmail.com', :birthday => '1982-03-05', :address => 'Rua Prado Valadares, nº 19, apt202, Nazaré', :cpf => '01652747516', :organization => organization, :category => consumidor_pessoa)

############Contacts###############################
Contact.destroy_all

############Contact Positions######################

############Workers################################
Worker.destroy_all
worker_vendedor = Worker.create!(:name => 'José Fernandes', :cpf => '63358421813', :address => 'Rua do Timbó, nº 45, Itaigara', :birthday => '1975-06-14', :category => salesman_category, :organization => organization, :email => 'jose@toca.com')
worker_gerente = Worker.create!(:name => 'Carla Alves', :cpf => '53170430424', :address => 'Alameda das Pintagueiras, nº 37, Caminho das Árvores', :birthday => '1979-07-18', :category => manager_category, :organization => organization, :email => 'carla@toca.com')

############Till###################################
# TODO put it to works
#Till.destroy_all
#till_one = Till.new(organization, gerente, '1' )
#till_one.save!

############Sales###################################
#Sale.destroy_all
#sale_one = Sale.new(till_one)
#sale_one.save!

############Sale Items##############################
#SaleItem.destroy_all
#sale_item_one = SaleItem.new(sale_one, :product => camisa, :amount => 2.0)
#sale_item_one.save!
#sale_item_two = SaleItem.new(sale_one, :product => calca, :amount => 3.0)
#sale_item_two.save!

############Mass Mail###############################
#MassMail.destroy_all
#mail_one = MassMail.create!(:subject => 'Festa de Inauguração da Toca!', :body => 'Olá, a Toca o convida para a sua festa de inauguração. Não perca!', :organization => organization)
#mail_one = MassMail.create!(:subject => 'Conheça o site da Toca', :body => 'Olá, o site da Toca está disponível em http://www.consumidorsustentavel.com.br/http://www.consumidorsustentavel.com.br/.', :organization => organization)

############Departments###############################
Department.destroy_all
marketing_department = Department.create!(:name => 'Marketing', :organization => organization)
departamento_vendas = Department.create!(:name => 'Vendas', :organization => organization)

############Document######################
Document.destroy_all
proposta_toca = Document.create!(:name => 'Estruturação do espaço de eventos', :is_model => false, :organization => organization, :body => 'Parceria com a Colivre para estruturação do espaço para realização de cursos de sofware livre.', :departments => [marketing_department], :tag_list => 'evento, cursos', :owner => cliente_one)
divulgacao_cursos = Document.create!(:name => 'Cursos de SL', :is_model => false, :organization => organization, :body => 'Divulgacao de cursos de sofware livre.', :departments => [marketing_department], :tag_list => 'cursos', :owner => cliente_two)
nota = Document.create!(:name => 'Nota Fiscal', :is_model => true, :organization => organization, :body => 'Recebido o valor de R$ X.XXX,XX. Data XX/XX/XXXX. Assinatura:', :departments => [departamento_vendas], :tag_list => 'notas, vendas, recibos')
ficha = Document.create!(:name => 'Ficha de Matrícula', :is_model => true, :organization => organization, :body => 'N.º de matrícula: 000. Nome: ', :departments => [departamento_vendas], :tag_list => 'cadastro')
nota_computador = Document.create!(:name => 'Nota Fiscal Computador', :is_model => false, :organization => organization, :body => 'Recebido o valor de R$ 800,00. Data 26/10/2007. Assinatura:', :departments => [departamento_vendas], :document_model_id => nota.id, :tag_list => 'notas, vendas, recibos', :owner => worker_gerente)
nota_agua = Document.create!(:name => 'Nota Fiscal Água', :is_model => false, :organization => organization, :body => 'Recebido o valor de R$ 3,50. Data 26/10/2007. Assinatura:', :departments => [departamento_vendas], :document_model_id => nota.id, :tag_list => 'notas', :owner => worker_vendedor)
nota_luz = Document.create!(:name => 'Nota Fiscal Luz', :is_model => false, :organization => organization, :body => 'Recebido o valor de R$ 13,60. Data 05/10/2007. Assinatura:', :departments => [departamento_vendas], :document_model_id => nota.id, :tag_list => 'notas', :owner => worker_vendedor)

###########Document Section################
DocumentSection.destroy_all
#section_one = DocumentSection.create!(:name => 'máquinas', :document => proposal)

############Document Items#################
DocumentItem.destroy_all
#item_one = DocumentItem.create!(:document_section => section_one, :quantity => '10', :unitary_value => 400.00,:product => monitor)

########### Bank ###################
Bank.delete_all
bank = Bank.create!(:code => '001', :name => 'Banco do Brasil S.A. ', :site => 'www.bb.com.br')
 

########### Bank Account ###################
BankAccount.delete_all
account = BankAccount.new(:agency => '3352-3', :account => '23456-3')
account.bank = bank
account.organization = organization
account.is_default = true
account.save!
saving_account = BankAccount.new(:agency => '4122-3', :account => '4546-3', :variation => 4)
saving_account.bank = bank
saving_account.organization = organization
saving_account.save!

########### Ledger Category ###################
LedgerCategory.delete_all
money_expense = LedgerCategory.create!(:name => 'Limpeza', :organization => organization, :type_of => Payment::TYPE_OF_EXPENSE, :payment_methods => ['money'])
money_income = LedgerCategory.create!(:name => 'Emprestimo', :organization => organization, :type_of => Payment::TYPE_OF_INCOME, :payment_methods => ['money', 'check'])
LedgerCategory.create!(:name => 'A vista', :organization => organization, :type_of => Payment::TYPE_OF_INCOME, :payment_methods => ['money', 'check', 'debit_card'], :is_sale => true)

check_income = LedgerCategory.create!(:name => 'Cheque 3 X', :organization => organization, :type_of => Payment::TYPE_OF_INCOME, :payment_methods => ['check'], :is_sale => true)
LedgerCategory.create!(:name => '1x sem juros', :organization => organization, :type_of => Payment::TYPE_OF_INCOME, :payment_methods => ['credit_card'], :is_sale => true)

stock_category = LedgerCategory.create!(:name => 'Compra de Produto', :organization => organization, :type_of => Payment::TYPE_OF_EXPENSE, :payment_methods => ['money', 'check'], :is_stock => true )

sale_category = LedgerCategory.create!(:name => 'A Vista', :organization => organization, :type_of => Payment::TYPE_OF_INCOME, :payment_methods => ['money', 'check'], :is_sale => true )
#############################
# Period
# ###########################

Periodicity.delete_all
Periodicity.create!(:name => 'Mensal', :number_of_days => 30, :organization => organization)
Periodicity.create!(:name => 'Quinzenal', :number_of_days => 15, :organization => organization)


#############################
# Ledger
# ###########################

Ledger.delete_all
Ledger.create!(:category => money_expense, :value => 2.3, :bank_account => account, :date => Date.today, :owner => organization, :payment_method => 'money')
Ledger.create!(:category => money_income, :value => 222.50, :bank_account => account, :date => Date.today, :owner => organization, :payment_method => 'money')

############ Invoice #######################

invoice = Invoice.create(:number => 23432, :serie => 3344, :issue_date => Date.today, :supplier => hering)

############Stock Entries#########################
Stock.destroy_all
camisa_entrada = StockBuy.create!(:supplier => hering, :amount => 50, :price => 10, :date => (DateTime.now - 2), :product => camisa, :validity => Date.today, :invoice => invoice)
money_stock_in = Ledger.create!(:category => money_expense, :value => 12.3, :bank_account => account, :date => Date.today, :owner => organization, :payment_method => 'money')
camisa_entrada = StockBuy.create!(:supplier => hering, :amount => 40, :price => 10, :date => (DateTime.now - 2), :product => camisa, :validity => Date.today, :invoice => invoice )
money_stock_in = Ledger.create!(:category => money_expense, :value => 12.3, :bank_account => account, :date => Date.today, :owner => organization, :payment_method => 'money')
calca_entrada = StockBuy.create!(:supplier => hering, :amount => 50, :price => 10, :date => (DateTime.now - 2), :product => calca,  :validity => Date.today, :invoice => invoice)
money_stock_in = Ledger.create!(:category => money_expense, :value => 12.3, :bank_account => account, :date => Date.today, :owner => organization, :payment_method => 'money')


########### Creating Profiles (Role/RoleAssigment) ###############
RoleAssignment.destroy_all
Role.destroy_all
organization_management = Role.create!(:name => 'Management', :permissions => ['manage_department', 'view_department', 'view_ledger', 'edit_ledger'])

RoleAssignment.create!(:accessor => gerente, :role => organization_management, :resource => organization)

